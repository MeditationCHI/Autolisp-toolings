(defun reduceLayer (lay)
	(command "-layer" "lo" "*" "off" "*" "y" "")
	(command "-layer" "u" lay "on" lay "")
)

; function: explode more than one polyline
(defun explodeAll(lst / i)
  (setq i 0)
  (while (< i (sslength lst))
    (command "explode" (ssname lst i) )
    (setq i (1+ i))
  )
)

; function: find element
(defun findelement (element ss)
  (cdr(assoc element ss))
)

; function: precision round
(defun exact (value)
	(/ (fix (+ (* PRECFACT value) 0.5)) PRECFACT)
)

; check stepping true/false
(defun checkstep (r stp)
	(setq nstp(/ (exact r) stp))
		(equal (- nstp (fix nstp)) 0 PRECISION)
)

;function: Select type of sandwich
(defun selectmat (types / num)
	(textscr)
	(prompt "\n Please choose the sandwich type:")
	(setq i 0)
	(while (< i (length types))
		(prompt (strcat "\n (" (itoa (1+ i)) ") " (nth i types)))
		(setq i (1+ i))
	)
	(print)
	(while 
		(progn
			(setq num (getint"Type:"))
			(or (> num (length types)) (< num 1))
		)
	)
; result 0-based
	(setq gl_input (1- num))
)

;function: Defining the minimum radius
(defun defradmin ()
	(nth (selectmat LIST_SANDWICH) LIST_RADMIN)
)

; function: make a copy of the complete Finish Die on check-layer and explode all
(defun copyFD (lay tp / llay llay2 llay3 ent)
	(setq llay(cons(cons 8 lay) ()))
	(setq llay2(cons(cons 8 (strcat "CHECK_" tp "_" lay)) ()))
	(setq llay3(strcat "CHECK_" tp "_" lay))
	(setq ent(ssget "X" llay))
	(command "copy" ent "" "0,0" "0,0")
	(command "-layer" "m" llay3 "")
	(command "chprop" ent "" "layer" llay3 "")
	(command "-layer" "lo" lay "off" lay "")
	(setq ent(ssget "X" llay2))
	(setq plines(ssget "X" (append '((-4 . "<AND")) llay2 '((0 . "LWPOLYLINE") (-4 . "AND>")))))
	(explodeAll plines)
)

; function: make a copy of the complete Finish Die on check-layer and explode all (10mm lines)
(defun copyFDline10 (lay ss / llay llay2 llay3 ent)
	(setq llay(cons(cons 8 lay) ()))
	(setq llay2(cons(cons 8 (strcat "CHECK_LINE10_" lay)) ()))
	(setq llay3(strcat "check_line10_" lay))
	(command "copy" ss "" "0,0" "0,0")
	(command "-layer" "m" llay3 "")
	(command "chprop" ss "" "layer" llay3 "")
	(command "-layer" "lo" lay "off" lay "")
	(setq ent(ssget "X" llay2))
	(explodeAll ent)
)

; check stepping of radiuses below 5.5mm and mark bad radiuses red
(defun badrad (lst stp / i r)
	(setq i 0)
	(while (< i (sslength lst))
		(setq r (findelement 40 (entget (ssname lst i))))
		(if (not (checkstep r stp))
			(command "chprop" (ssname lst i) "" "color" "red" "")
		)
	(setq i (1+ i))
	)
	(princ)
)

;count number of different radiuses
(defun countrad (lst / i r rc radlist)
  (setq radlist '())
  (setq i 0)
  (while (< i (sslength lst))
    (setq r(rtos (findelement 40 (entget (ssname lst i)))))
    (setq rc (assoc r radlist))
    (setq radlist (if rc
   					(subst (cons r (1+ (cdr rc))) rc radlist) 
   					(cons (cons r 1) radlist)
   				  )
    )
    (setq i (1+ i))
  )
  radlist
)

;function: Sort radius in decreasing order
(defun sort (LST / LST1 LO HI A)
  (if (> (length LST) 1)
    (progn
    (setq LO (car LST))
    (foreach x (cdr LST)
      (if (< (car x) (car LO)) (setq A LO LO x x A))
      (if (> (car x) (car HI)) (setq A HI HI x x A))
      (if x (setq LST1 (cons x LST1)))
    )
    (append (list LO) (sort LST1) (if HI (list HI)))
    )
  )
)

;function: Write Layer and Sandwich-type in tablehead
(defun tablehead (lay / material)
	(setq material (nth gl_input LIST_SANDWICH))
	(command "text" "750.0,890.0" "12" "0" (strcat "Sandwich: " material))
	(command "text" "750.0,870.0" "12" "0" (strcat "Layer: " lay))
)

; function: Create table of radiuses in drawing
(defun createtable(lst lst2 minimum / i rads r n c)
	(setq i 0)
  	(command "text" "770.0,770.0" "12" "0" "Radius(mm)   Quantity")
  	(setq rads(sort (countrad lst)))
  	(while (< i (length rads))
    	    (setq r (car(nth i rads)))
    	    (setq n (cdr(nth i rads)))
    	    (setq c (not (checkstep (atof r) 0.25)))
    	    (command "text" (strcat "750," (rtos (- 750 (* i 13)))) TEXTHEIGHT "0" (1+ i))
    	    (if c (command "chprop" (entlast) "" "color" "red" ""))
			(command "text" (strcat "810," (rtos (- 750 (* i 13)))) TEXTHEIGHT "0" r)
    	    (if c (command "chprop" (entlast) "" "color" "red" ""))
    	    (command "text" (strcat "900," (rtos (- 750 (* i 13)))) TEXTHEIGHT "0" n)
    	    (if c (command "chprop" (entlast) "" "color" "red" ""))
       	(setq i (1+ i))
		)
	(setq i 0)
  	(command "text" "770.0,600.0" "12" "0" (strcat "Radius below " (rtos minimum) "mm"))
  	(if lst2
		(progn
	   		(setq rads(countrad lst2))
  			(while (< i (length rads))
    			    (setq r (car(nth i rads)))
    	   			(setq n (cdr(nth i rads)))
    		   		(setq c (not (checkstep (atof r) 0.25)))
   		 		    (command "text" (strcat "750," (rtos (- 580 (* i 13)))) TEXTHEIGHT "0" (1+ i))
    			    (if c (command "chprop" (entlast) "" "color" "red" ""))
					(command "text" (strcat "810," (rtos (- 580 (* i 13)))) TEXTHEIGHT "0" r)
    		 	   (if c (command "chprop" (entlast) "" "color" "red" ""))
    		 	   (command "text" (strcat "900," (rtos (- 580 (* i 13)))) TEXTHEIGHT "0" n)
    		 	   (if c (command "chprop" (entlast) "" "color" "red" ""))
       			(setq i (1+ i))
			)
		)
	)
)

;function: check radius, 5.5mm-2mm: green, <2mm: cyan, not 0.25step: red
(defun crad(FinishDie minimum / arc55 plines llay lay minrad)
	
	(reduceLayer FinishDie)
	(copyFD FinishDie "RAD")
	(setq lay(strcat "CHECK_RAD_" FinishDie))
	(setq llay(cons(cons 8 (strcat "CHECK_RAD_" FinishDie)) () ))
	(setq minrad(cons(cons 40 (- minimum PRECISION)) () ))
	
	; check radiuses between 2mm and 5.5mm and mark them red
	(setq arc55(ssget "X" (append '((-4 . "<AND") (0 . "ARC")
			(-4 . "<AND") (-4 . "<=") (40 . 5.5001)(-4 . ">") (40 . 1.9999) (-4 . "AND>"))
			llay '((-4 . "AND>")))))
	(if arc55
	(command "chprop" arc55 "" "color" "green" "")
	)

	; check radiuses below 2mm and mark them cyan
	(setq arc2(ssget "X" (append '((-4 . "<AND") (0 . "ARC")
			(-4 . "<AND") (-4 . "<")) minrad '((-4 . "AND>"))
			llay '((-4 . "AND>")))))
	(if arc2
	(command "chprop" arc2 "" "color" "cyan" "")
	)
	
	(badrad arc55 0.25)
	(createtable arc55 arc2 minimum)
	(tablehead lay)
	(command "text" "750.0,840.0" "12" "0" "GREEN radius: 2mm-5.5mm, 0.25step")
	(command "text" "750.0,820.0" "12" "0" "RED radius: 2mm-5.5mm, not 0.25step")
	(command "text" "750.0,800.0" "12" "0" "CYAN radius: below minimum")
	(princ)
)

;Function: check 10mm lines
(defun cline10(FinishDie / llay llay2 outlineFD ent xyz_start xyz_end dist lines)
	(reduceLayer FinishDie)
	(setq llay(strcat "CHECK_LINE10_" FinishDie))
	(setq llay2(cons(cons 8 llay) () ))
	(command "-layer" "m" llay "")
	(setq outlineFD nil)
	(while (not outlineFD)
		(setq outlineFD (entsel "Please click on FD outline..."))
	)
	(copyFDline10 FinishDie outlineFD)
	(tablehead llay)
	(command "text" "750.0,840.0" "12" "0" "GREEN lines: >= 10mm")
; check the length of the lines and mark <=10mm red
	(setq lines(ssget "X" (cons '(0 . "LINE") llay2)))
	(setq i 0)
	(while (< i (sslength lines))
		(setq ent(entget (ssname lines i)))
		(setq xyz_start(findelement 10 ent))
		(setq xyz_end(findelement 11 ent))
		(setq dist(exact(distance xyz_start xyz_end)))
		(if (and (> dist 9.9999)
				(or (equal (nth 0 xyz_start) (nth 0 xyz_end) PRECISION)
					(equal (nth 1 xyz_start) (nth 1 xyz_end) PRECISION)
				)
			)
			(command "chprop" (ssname lines i) "" "color" "green" "")
		)
		(setq i (1+ i))
	)
)

;Function: check 20mm and 7mm lines
(defun cline207(FinishDie / llay llay2 outlineFD ent xyz_start xyz_end dist lines)
	(reduceLayer FinishDie)
	(setq llay(strcat "CHECK_LINE207_" FinishDie))
	(setq llay2(cons(cons 8 llay) () ))
	(command "-layer" "m" llay "")
	(copyFD FinishDie "LINE207")
	(tablehead llay)
	(command "text" "750.0,840.0" "12" "0" "GREEN lines: >= 20mm")
	(command "text" "750.0,820.0" "12" "0" "RED lines: < 7mm")
; check the length of the lines and mark 20mm green and <7mm red
	(setq lines(ssget "X" (cons '(0 . "LINE") llay2)))
	(setq i 0)
	(while (< i (sslength lines))
		(setq ent(entget (ssname lines i)))
		(setq xyz_start(findelement 10 ent))
		(setq xyz_end(findelement 11 ent))
		(setq dist(exact(distance xyz_start xyz_end)))
		(if (>= dist 19.9999)
			(command "chprop" (ssname lines i) "" "color" "green" "")
		)
		(if (< dist 6.9999)
			(command "chprop" (ssname lines i) "" "color" "red" "")
		)
		(setq i (1+ i))
	)
)

; does the check for a given layer
(defun layerCheck ( lst radmin / lay )
	(if lst 
    	(progn 
      		(setq lay (car lst))
      		(if (tblsearch "layer" lay) 
      			(progn (crad lay radmin) (cline10 lay) (cline207 lay))
      		)
      		(layerCheck (cdr lst) radmin)
    	)
  	)
)

; Command: check FinishDie complete
(defun C:FDCHECK ()
	(setvar "cmdecho" 0)
	(layerCheck FD_LAYERS (defradmin))
	(layerCheck FD_LAYERS_FELT RADMINFELT)
	(command "-layer" "u" "0" "on" "0" "")
	(command "-layer" "s" "0" "")
	(setvar "cmdecho" 1)
)
